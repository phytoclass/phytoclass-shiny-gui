---
title: "Cluster"
format:
  html:
    code-fold: true
    standalone: true
params:
  inputFile: "clusters.rds"
  taxaFile: "taxa.rds"
  outputFile: "anneal.rds"
  seed: 7683
  selected_cluster: 1
  niter: 500
---

```{R}
#| code-summary: setup

library("glue")
```

```{R}
#| label: load data

clusters <- readRDS(params$inputFile)
taxa <- readRDS(params$taxaFile)
```

```{R}
#| code-summary: clean up taxa matrix if needed
# === remove numeric rownames set by readRDS
if (all(grepl("^[0-9]+$", rownames(taxa)))) {
  print("dropping unneeded numeric index")
  # Set the first column as row names
  rownames(taxa) <- taxa[[1]]
  
  # Remove the first column
  taxa <- taxa[, -1] 
}

# === drop any all-zero columns
original_colnames <- colnames(taxa)

# do the subset
taxa <- taxa[, colSums(taxa) != 0]

# Find the column names that were dropped
dropped_colnames <- setdiff(original_colnames, colnames(taxa))

# Print a message if any columns were dropped
if (length(dropped_colnames) > 0) {
  cat(
    length(dropped_colnames), 
    "F-matrix columns dropped because they contained only zeros:\n"
    )
  cat(paste(dropped_colnames, collapse = ", "), "\n")
}
```
```{R}
#| code-summary: prep S matrix
if (params$selected_cluster > length(clusters$cluster.list)){
  stop("selected cluster is greater than number of clusters")
}

selectedCluster <- clusters$cluster.list[[
  params$selected_cluster
]]
# log_trace("Remove cluster column/label")
selectedCluster$Clust <- NULL
```

```{R}
#| code-summary: find mismatches between F and S
# TODO: also check this for the min_max matrix
# Assume taxa and selectedCluster are the two matrices
headers1 <- colnames(taxa)
headers2 <- colnames(selectedCluster)

# Find headers in taxa that are not in selectedCluster
only_in_mtx1 <- setdiff(headers1, headers2)

# Find headers in selectedCluster that are not in taxa
only_in_mtx2 <- setdiff(headers2, headers1)

# Find headers common to both matrices
common_headers <- intersect(headers1, headers2)

# Print the results
if (! length(common_headers) > 0){
  cat(
    "Headers only in taxa:\n", 
    paste(only_in_mtx1, collapse = ", "), 
    "\n"
  )
  cat(
    "Headers only in selectedCluster:\n", 
    paste(only_in_mtx2, collapse = ", "), 
    "\n"
  )
  cat(
    "Headers common to both matrices:\n", 
    paste(common_headers, collapse = ", "), 
    "\n"
  )
  stop("ERR: S and F matrix have different columns.")
}
```

```{R, run annealing}
#| code-summary: run annealing
set.seed(params$seed)

Results <- phytoclass::simulated_annealing(
  S = selectedCluster,
  F = taxa,  # TODO: this isn't working?
  niter = params$niter,  # number of iterations
  # user_defined_min_max = minMaxTable
  # TODO: place to upload table to replace
  #       phytoclass::min_max table
  verbose = FALSE
)
```

```{R, show results}
#| code-summary: show results
print(glue("
 completed w/ RMSE {Results$RMSE}
"))

print(Results$Figure)

print("Mean Absolute Error (MAE):")
print(Results$MAE)
# 
print("F matrix:")
print(Results$`F matrix`)

library(pander)
pander(Results$`Class abundances`, digits = 6)
```

